üîë OIDC (OpenID Connect)

√â uma camada de identidade constru√≠da sobre OAuth 2.0.
Permite que usu√°rios fa√ßam login em diferentes sistemas usando um provedor de identidade (ex: Google, Microsoft, Keycloak, Okta).
Muito usado em aplica√ß√µes modernas (cloud, microsservi√ßos, APIs).
Exemplo: clicar em "Login com Google" em um site est√° usando OIDC.

üõ°Ô∏è SAML (Security Assertion Markup Language)
√â um padr√£o baseado em XML para troca de dados de autentica√ß√£o e autoriza√ß√£o.
Muito utilizado em Single Sign-On (SSO) em ambientes corporativos.
Exemplo: acessar v√°rios aplicativos internos de uma empresa (como ERP, intranet e e-mail) ap√≥s se autenticar uma √∫nica vez no AD/IdP.

üìÇ LDAP (Lightweight Directory Access Protocol)
√â um protocolo para acessar diret√≥rios de usu√°rios e permiss√µes.
Usado frequentemente para consultar servidores como Active Directory ou OpenLDAP.
Muito comum em sistemas on-premises (rede corporativa, controle de acesso, permiss√µes de arquivos, e-mail interno).


üîê IAM (Identity and Access Management)

Servi√ßo da AWS para gerenciamento de identidade e permiss√µes.
Permite criar usu√°rios, grupos e roles, e controlar o que cada um pode ou n√£o fazer dentro da AWS (ex: acessar um bucket S3, invocar uma Lambda, criar inst√¢ncias EC2).
Exemplo: criar uma IAM Role que d√° permiss√£o apenas de leitura em S3 para uma aplica√ß√£o.

üåê API Gateway

Servi√ßo da AWS que funciona como porta de entrada para APIs.
Faz o gerenciamento de requisi√ß√µes HTTP/REST ou WebSocket, autentica√ß√£o, rate limiting, caching, logging, etc.
Normalmente usado em conjunto com Lambda (backend serverless).

Exemplo: um endpoint /users que recebe requisi√ß√µes REST e dispara uma Lambda para processar.

‚ö° Lambda
Servi√ßo de computa√ß√£o serverless da AWS.
Voc√™ sobe fun√ß√µes (em v√°rias linguagens: Java, Python, Node.js, Go, etc.), e a AWS executa sob demanda quando acionadas (por eventos do API Gateway, S3, DynamoDB, cron, etc.).
Vantagem: n√£o precisa de servidor fixo, paga apenas pelo tempo de execu√ß√£o.
Exemplo: ao subir um arquivo em S3, uma Lambda √© acionada automaticamente para processar esse arquivo.

EC2, ou Amazon Elastic Compute Cloud, √© um servi√ßo da Amazon Web Services (AWS)
que permite alugar servidores virtuais (chamados "inst√¢ncias")
na nuvem da Amazon para hospedar aplica√ß√µes e sistemas de software.
O servi√ßo oferece capacidade de computa√ß√£o escal√°vel,
permitindo que os utilizadores ajustem os recursos de acordo com as suas necessidades,
pagando apenas pelo tempo que usam, da√≠ o nome

O AWS EKS (Elastic Kubernetes Service) √© o servi√ßo gerenciado da Amazon para rodar clusters Kubernetes na nuvem AWS.
Basicamente, ele facilita a cria√ß√£o,
configura√ß√£o e opera√ß√£o de clusters Kubernetes sem que voc√™ precise gerenciar manualmente o plano de controle (control plane)
e etcd ‚Äî a AWS cuida dessa parte cr√≠tica e de alta disponibilidade.

O que √© o ECS?

O AMAZON ECS √© um servi√ßo de orquestra√ß√£o de containers que permite rodar, escalar e gerenciar aplica√ß√µes Docker diretamente na AWS, sem precisar de Kubernetes.
Ele foi desenhado pela pr√≥pria AWS para ser mais simples e integrado ao ecossistema deles.

O AMAZON KEYSPACES √© um banco de dados NoSQL totalmente gerenciado, compat√≠vel com Apache Cassandra.
Ele foi criado para quem j√° usa Cassandra (on-premises ou em outra nuvem) mas quer tirar proveito da infraestrutura gerenciada da AWS,
sem se preocupar em instalar, manter ou escalar clusters Cassandra manualmente.

O AMAZON RDS (Relational Database Service) for PostgreSQL √© um servi√ßo gerenciado de banco de dados relacional baseado no PostgreSQL open source.
Com ele, voc√™ usa todo o poder do PostgreSQL, mas sem precisar gerenciar manualmente instala√ß√£o, upgrades, backups, patches, replica√ß√£o e alta disponibilidade.

üìä OLTP (Online Transaction Processing)

Refere-se a processamento de transa√ß√µes online.
S√£o sistemas focados em gravar, consultar e atualizar dados rapidamente, com muitas opera√ß√µes curtas e simult√¢neas.
Caracter√≠sticas t√≠picas:
Suporte a muitos usu√°rios concorrentes.
Uso intenso de √≠ndices e joins para consultas r√°pidas.
Garantia de ACID (Atomicidade, Consist√™ncia, Isolamento, Durabilidade).

üì° AWS MSK (Managed Streaming for Apache Kafka)

Servi√ßo gerenciado da AWS que roda o Apache Kafka.
Kafka √© uma plataforma de streaming distribu√≠do, voltada para alta vaz√£o e baixa lat√™ncia em processamento de eventos.
Principais caracter√≠sticas:
Trabalha com t√≥picos particionados e consumidores em grupo.
Bom para event streaming (fluxos cont√≠nuos de dados).
Ret√©m mensagens por tempo configurado (n√£o apenas at√© o consumo).

üì¨ AWS SQS (Simple Queue Service)
Fila de mensagens simples, confi√°vel e totalmente gerenciada pela AWS.
Suporta Standard Queues (alta vaz√£o, entrega pelo menos uma vez) e FIFO Queues (ordem garantida, exatamente uma vez).
Mensagem fica na fila at√© ser consumida e apagada.
N√£o √© feito para streaming cont√≠nuo, mas sim troca ass√≠ncrona de mensagens entre sistemas.
Extremamente f√°cil de usar (n√£o precisa administrar brokers/parti√ß√µes).